{"version":3,"sources":["SeasonDisplay.js","LoadSpinner.js","ErrorMessage.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonsDisplay","props","lat","month","season","latitude","Date","getMonth","className","LoadSpinner","message","defaultProps","ErrorMessage","errorMessage","App","state","navigator","geolocation","getCurrentPosition","pos","setState","coords","err","this","renderContent","React","Component","ReactDOM","render","document","querySelector"],"mappings":"8RAGMA,G,MAAe,CACnBC,OAAQ,CACNC,KAAK,uBACLC,SAAS,OAEXC,OAAQ,CACNF,KAAK,qBACLC,SAAS,eAyBEE,EAbQ,SAAAC,GACrB,IATiBC,EAAKC,EAShBC,GATWF,EASQD,EAAMI,UATTF,GASmB,IAAIG,MAAOC,YARxC,GAAKJ,EAAQ,EAChBD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAIA,EAEHP,EAAaS,GAAhCP,EAFsB,EAEtBA,KAAMC,EAFgB,EAEhBA,SAEd,OACE,yBAAKU,UAAS,yBAAoBJ,IAChC,uBAAGI,UAAS,4BAAuBV,EAAvB,mBACZ,4BAAKD,GACL,uBAAGW,UAAS,6BAAwBV,EAAxB,qBC5BZW,EAAc,SAAAR,GAClB,OACE,yBAAKO,UAAU,oBACb,yBAAKA,UAAU,wBAAwBP,EAAMS,WAKnDD,EAAYE,aAAe,CACzBD,QAAS,cAGID,QCGAG,G,YAdM,SAAAX,GACnB,OACE,yBAAKO,UAAU,eACb,4EAEE,6BAFF,sBAIE,6BACA,4BAAKP,EAAMY,kBCJbC,E,2MACJC,MAAQ,CAAEV,SAAU,KAAMQ,aAAc,I,mFAEnB,IAAD,OAClBG,UAAUC,YAAYC,oBACpB,SAAAC,GAAG,OAAI,EAAKC,SAAS,CAAEf,SAAUc,EAAIE,OAAOhB,cAC5C,SAAAiB,GAAG,OAAI,EAAKF,SAAS,CAAEP,aAAcS,EAAIZ,e,sCAK3C,OAAIa,KAAKR,MAAMF,eAAiBU,KAAKR,MAAMV,SAClC,kBAAC,EAAD,CAAcQ,aAAcU,KAAKR,MAAMF,gBAG3CU,KAAKR,MAAMF,cAAgBU,KAAKR,MAAMV,SAClC,kBAAC,EAAD,CAAgBA,SAAUkB,KAAKR,MAAMV,WAGvC,kBAAC,EAAD,CAAaK,QAAQ,yC,+BAI5B,OAAO,yBAAKF,UAAU,UAAUe,KAAKC,qB,GAvBvBC,IAAMC,WA2BxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.6f5a8f1f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./SeasonDisplay.css\";\r\n\r\nconst seasonConfig = {\r\n  summer: {\r\n    text: `Let's hit the beach!`,\r\n    iconName: `sun`\r\n  },\r\n  winter: {\r\n    text: `Brrr, it's chilly!`,\r\n    iconName: `snowflake`\r\n  }\r\n};\r\n\r\nconst getSeason = (lat, month) => {\r\n  if (month > 2 && month < 9) {\r\n    return lat > 0 ? \"summer\" : \"winter\";\r\n  } else {\r\n    return lat > 0 ? \"winter\" : \"summer\";\r\n  }\r\n};\r\n\r\nconst SeasonsDisplay = props => {\r\n  const season = getSeason(props.latitude, new Date().getMonth());\r\n  const { text, iconName } = seasonConfig[season];\r\n\r\n  return (\r\n    <div className={`season-display ${season}`}>\r\n      <i className={`icon-left massive ${iconName} loading icon`} />\r\n      <h1>{text}</h1>\r\n      <i className={`icon-right massive ${iconName} loading icon`} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SeasonsDisplay;\r\n","import React from \"react\";\r\n\r\nconst LoadSpinner = props => {\r\n  return (\r\n    <div className=\"ui active dimmer\">\r\n      <div className=\"ui large text loader\">{props.message}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nLoadSpinner.defaultProps = {\r\n  message: \"Loading...\"\r\n};\r\n\r\nexport default LoadSpinner;\r\n","import React from \"react\";\r\nimport \"./ErrorMessage.css\";\r\n\r\nconst ErrorMessage = props => {\r\n  return (\r\n    <div className=\"err-display\">\r\n      <h3>\r\n        Sorry! We are not able to display the season.\r\n        <br />\r\n        Here is the reason:\r\n        <br />\r\n        <em>{props.errorMessage}</em>\r\n      </h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport SeasonsDisplay from \"./SeasonDisplay\";\r\nimport LoadSpinner from \"./LoadSpinner\";\r\nimport \"./index.css\";\r\nimport ErrorMessage from \"./ErrorMessage\";\r\n\r\nclass App extends React.Component {\r\n  state = { latitude: null, errorMessage: \"\" };\r\n\r\n  componentDidMount() {\r\n    navigator.geolocation.getCurrentPosition(\r\n      pos => this.setState({ latitude: pos.coords.latitude }),\r\n      err => this.setState({ errorMessage: err.message })\r\n    );\r\n  }\r\n\r\n  renderContent() {\r\n    if (this.state.errorMessage && !this.state.latitude) {\r\n      return <ErrorMessage errorMessage={this.state.errorMessage} />;\r\n    }\r\n\r\n    if (!this.state.errorMessage && this.state.latitude) {\r\n      return <SeasonsDisplay latitude={this.state.latitude} />;\r\n    }\r\n\r\n    return <LoadSpinner message=\"Please accept the location request\" />;\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"border\">{this.renderContent()}</div>;\r\n  }\r\n}\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}